{
	"name": "pipeline_test1",
	"properties": {
		"activities": [
			{
				"name": "Copy Data1",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"enableStaging": false
				}
			},
			{
				"name": "dataflow1",
				"type": "ExecuteDataFlow",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "dataflow1",
						"type": "DataFlowReference"
					}
				}
			},
			{
				"name": "CustomBatch",
				"description": "Batch service",
				"type": "Custom",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"referenceObjects": {
						"linkedServices": [],
						"datasets": []
					}
				}
			},
			{
				"name": "Notebook DataBricks",
				"description": "java, R, python",
				"type": "DatabricksNotebook",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"libraries": [
						{
							"jar": ""
						}
					]
				}
			},
			{
				"name": "Jar DataBricks",
				"type": "DatabricksSparkJar",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": []
			},
			{
				"name": "Python DataBricks",
				"type": "DatabricksSparkPython",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": []
			},
			{
				"name": "U-SQL1",
				"type": "DataLakeAnalyticsU-SQL",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"scriptPath": ""
				}
			},
			{
				"name": "Append Variable1",
				"type": "AppendVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": ""
				}
			},
			{
				"name": "Delete1",
				"type": "Delete",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"enableLogging": true
				}
			},
			{
				"name": "Execute Pipeline1",
				"type": "ExecutePipeline",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"waitOnCompletion": true
				}
			},
			{
				"name": "Execute SSIS Package1",
				"type": "ExecuteSSISPackage",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"packageLocation": {
						"type": "SSISDB"
					},
					"loggingLevel": "Basic"
				}
			},
			{
				"name": "Get Metadata1",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "Binary1",
						"type": "DatasetReference"
					},
					"fieldList": [],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true
					}
				}
			}
		],
		"annotations": []
	}
}